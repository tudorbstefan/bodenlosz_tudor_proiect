// <auto-generated />
using System;
using ComicBookStoreProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComicBookStoreProject.Migrations
{
    [DbContext(typeof(ComicBookStoreProjectContext))]
    [Migration("20210108185320_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ComicBookStoreProject.Models.Comicbook", b =>
                {
                    b.Property<int>("ISSN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("DimensionID")
                        .HasColumnType("int");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PublisherID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ISSN");

                    b.HasIndex("DimensionID");

                    b.HasIndex("PublisherID");

                    b.ToTable("Comicbook");
                });

            modelBuilder.Entity("ComicBookStoreProject.Models.Dimension", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Dimension");
                });

            modelBuilder.Entity("ComicBookStoreProject.Models.Publisher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Founded")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("ComicBookStoreProject.Models.Comicbook", b =>
                {
                    b.HasOne("ComicBookStoreProject.Models.Dimension", "Dimension")
                        .WithMany("Comicbooks")
                        .HasForeignKey("DimensionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComicBookStoreProject.Models.Publisher", "Publisher")
                        .WithMany("Comicbooks")
                        .HasForeignKey("PublisherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dimension");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("ComicBookStoreProject.Models.Dimension", b =>
                {
                    b.Navigation("Comicbooks");
                });

            modelBuilder.Entity("ComicBookStoreProject.Models.Publisher", b =>
                {
                    b.Navigation("Comicbooks");
                });
#pragma warning restore 612, 618
        }
    }
}
